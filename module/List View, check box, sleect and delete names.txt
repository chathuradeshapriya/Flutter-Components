=======================================data_table.dart============================================

import 'dart:ffi';

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'user.dart';

class DataTableDemo extends StatefulWidget {
  DataTableDemo() : super();
  final String title = "Data table Demo";

  @override
  State<DataTableDemo> createState() => DataTableDemoState();
}

class DataTableDemoState extends State<DataTableDemo> {
  late List<User> users;
  late List<User> selectedUsers;
  late bool sort;

  @override
  void initState() {
    sort = false;
    selectedUsers = [];
    users = User.getUsers();
    super.initState();
  }

  onSortColumn(int columnIndex, bool ascending) {
    if (columnIndex == 0) {
      if (ascending) {
        users.sort((a, b) => a.firstName.compareTo(b.firstName));
      } else {
        users.sort((a, b) => b.firstName.compareTo(a.firstName));
      }
    }
  }

  onSelectedRow(bool selected, User user) async {
    setState(() {
      if (selected) {
        selectedUsers.add(user);
      } else {
        selectedUsers.remove(user);
      }
    });
  }

  deleteSelected() async {
    setState(() {
      if (selectedUsers.isNotEmpty){
        List<User> temp = [];
        temp.addAll(selectedUsers);
        for(User user in temp) {
          users.remove(user);
          selectedUsers.remove(user);
        }
      }
    });
  }

  SingleChildScrollView dataBody() {
      return SingleChildScrollView(
        scrollDirection: Axis.vertical,
        child: DataTable(

          sortAscending: sort,
          sortColumnIndex: 0,
          columns: [
            DataColumn(
                label: Text("FIRST NAME"),
                numeric: false,
                tooltip: "This is First Name",
                onSort: (columnIndex, ascending)
                {
                  setState(() {
                    sort = !sort;
                  });
                  onSortColumn(columnIndex, ascending);
                }
                ),
            DataColumn(
              label: Text("LAST NAME"),
              numeric: false,
              tooltip: "This is Last Name",
            ),
          ],
          rows: users
              .map(
                (user) => DataRow(
                selected: selectedUsers.contains(user),
                onSelectChanged: (b) {
                  print("Onselect");
//              onSelectedRow(, user);
                onSelectedRow(b!, user);
                },

                    cells: [
                      DataCell(Text(user.firstName),
                          onTap: () {
                        print('Select ${user.firstName}');
                      }
                      ),
                      DataCell(
                        Text(user.lastName),
                      ),
                    ]),
              )
              .toList(),
        ),
      );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),
      body: Column(
        mainAxisSize: MainAxisSize.min,
        mainAxisAlignment: MainAxisAlignment.center,
        verticalDirection: VerticalDirection.down,
        children: <Widget>[
          Center(
            child: dataBody(),
          ),
          Row(
            mainAxisAlignment: MainAxisAlignment.center,
            mainAxisSize: MainAxisSize.min,
            children: <Widget>[
              Padding(padding: EdgeInsets.all(20.0),
              child: OutlinedButton(
                child: Text('SELECTED ${selectedUsers.length}'),
                onPressed: () {},
              ),
              ),
              Padding(padding: EdgeInsets.all(20.0),
                child: OutlinedButton(
                  child: Text(' DELETE SELECTED '),
                  onPressed: selectedUsers.isEmpty
                      ? null
                      : () {
                    deleteSelected();
                  },
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }
}


===========================================user.dart=================================

class User {
  late String firstName;
  late String lastName;

  User({required this.firstName, required this.lastName});

  static List<User> getUsers() {

    return <User> [
      User(firstName: "Aaryan", lastName: "Shah"),
      User(firstName: "Ben", lastName: "John"),
      User(firstName: "Carrie", lastName: "Brown"),
      User(firstName: "Deep", lastName: "Sen"),
      User(firstName: "Emily", lastName: "jane"),

    ];
  }

}




====================================main.dart================================================
import 'package:flutter/material.dart';
import 'package:test_two/screens/data_table.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(

        primarySwatch: Colors.blue,
      ),
      home: DataTableDemo(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key, required this.title}) : super(key: key);

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {

  @override
  Widget build(BuildContext context) {

    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),
    );
  }
}
